{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/components/navbar/navbar.component.ts","webpack:///src/app/core/components/navbar/navbar.component.html","webpack:///src/app/core/core-routing.module.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/guards/user.guard.ts","webpack:///src/app/core/interceptor/error.interceptor.ts","webpack:///src/app/core/interceptor/token.interceptor.ts","webpack:///src/app/core/services/alert/alert.service.ts","webpack:///src/app/core/services/auth/user-resolver.service.ts","webpack:///src/app/core/services/auth/user.service.ts","webpack:///src/app/core/services/http/http-connectors.service.ts","webpack:///src/app/core/services/index.ts","webpack:///src/app/protected/home/home.component.ts","webpack:///src/app/protected/home/home.component.html","webpack:///src/app/protected/profil/edit-profile/edit-profile.component.ts","webpack:///src/app/protected/profil/edit-profile/edit-profile.component.html","webpack:///src/app/protected/profil/edit-profile/index.ts","webpack:///src/app/protected/profil/profil.module.ts","webpack:///src/app/protected/protected-routing.module.ts","webpack:///src/app/protected/protected.module.ts","webpack:///src/app/public/login/login.component.ts","webpack:///src/app/public/login/login.component.html","webpack:///src/app/public/public-routing.module.ts","webpack:///src/app/public/public.module.ts","webpack:///src/app/public/register/register.component.ts","webpack:///src/app/public/register/register.component.html","webpack:///src/app/shared/alert/alert.component.ts","webpack:///src/app/shared/alert/alert.component.html","webpack:///src/app/shared/input/input.component.ts","webpack:///src/app/shared/input/input.component.html","webpack:///src/app/shared/modules/ngx-bootstrap.module.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["map","webpackAsyncContext","req","Promise","resolve","then","__webpack_require__","o","e","Error","code","id","keys","webpackAsyncContextKeys","Object","module","exports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","NavbarComponent","userService","activeId","isLoggedIn$","user$","logout","routes","path","component","canActivate","loadChildren","redirectTo","CoreRoutingModule","forRoot","CoreModule","parentModule","provide","useClass","multi","UserGuard","alertService","router","next","state","localStorage","getItem","sendMessage","navigateByUrl","providedIn","ErrorInterceptor","request","handle","pipe","error","errors","status","email","username","password","message","AuthInterceptor","idToken","cloned","clone","headers","set","err","removeItem","statusText","AlertService","subject","undefined","text","asObservable","UserResolverService","subscribe","user","Authorization","UserService","httpConnectorsService","http","anonymousUser$","getToken","getRequest","api","postRequest","response","setItem","token","putRequest","value","HttpConnectorsService","url","get","params","post","put","VALIDATION","require","required","min","minLength","max","maxLength","paternUsername","pattern","paternPassword","HomeComponent","route","loading","updateForm","userValue","invalid","update","EditProfileComponent","formBuilder","snapshot","data","group","onSubmit","ProfilModule","ProtectedRoutingModule","forChild","ProtectedModule","LoginComponent","loginForm","login","PublicRoutingModule","PublicModule","paternEmail","RegisterComponent","registerForm","signUp","AlertComponent","fade","onMessage","messages","InputComponent","control","touched","defaultClasses","classes","join","NgxBootstrapModule","SharedModule","environment","secure","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["var map = {\n\t\"../protected/protected.module\": \"./src/app/protected/protected.module.ts\"\n};\n\nfunction webpackAsyncContext(req) {\n\treturn Promise.resolve().then(function() {\n\t\tif(!__webpack_require__.o(map, req)) {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t}\n\n\t\tvar id = map[req];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'todolist';\n}\n","<app-navbar></app-navbar>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CoreModule } from './core/core.module';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, HttpClientModule, BrowserAnimationsModule, NgbModule, CoreModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { NgbDropdownConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { UserService } from 'src/app/core/services';\nimport { User } from 'src/app/shared/models';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n  providers: [NgbDropdownConfig],\n})\nexport class NavbarComponent implements OnInit {\n  activeId = 1;\n  user$: Observable<User>;\n  isLoggedIn$: Observable<boolean>;\n  constructor(private userService: UserService) {}\n\n  active;\n  ngOnInit(): void {\n    this.isLoggedIn$ = this.userService.isLoggedIn$;\n    this.user$ = this.userService.user$;\n  }\n\n  logout() {\n    this.userService.logout();\n  }\n}\n","<nav class=\"navbar navbar-expand bg-primary justify-content-between\">\n  <div class=\"navbar-brand\">\n    <a class=\"nav-link\" href=\"/\" [ngClass]=\"'is-active'\">Authentification</a>\n  </div>\n  <ul class=\"nav\">\n    <li class=\"nav-item\" *ngIf=\"!(isLoggedIn$ | async)\">\n      <a class=\"nav-link\" href=\"/register\" [ngClass]=\"'is-active'\">\n        Sign Up\n      </a>\n    </li>\n    <li class=\"nav-item\" *ngIf=\"!(isLoggedIn$ | async)\">\n      <a class=\"nav-link\" href=\"/login\" [ngClass]=\"'is-active'\">\n        Login\n      </a>\n    </li>\n    <li class=\"nav-item\" *ngIf=\"isLoggedIn$ | async\">\n      <a class=\"nav-link\" href=\"#\" (click)=\"logout()\">LogOut</a>\n    </li>\n    <li class=\"nav-item\" *ngIf=\"isLoggedIn$ | async\">\n      <a class=\"nav-link\" href=\"/profile/edit\">Edit profile</a>\n    </li>\n  </ul>\n</nav>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from '../public/login/login.component';\nimport { RegisterComponent } from '../public/register/register.component';\nimport { UserGuard } from './guards/user.guard';\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n\n  {\n    path: '',\n    canActivate: [UserGuard],\n    loadChildren: '../protected/protected.module#ProtectedModule',\n  },\n  {\n    path: '**',\n    redirectTo: '/login',\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class CoreRoutingModule {}\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProtectedModule } from '../protected/protected.module';\nimport { PublicModule } from '../public/public.module';\nimport { CoreRoutingModule } from './core-routing.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ErrorInterceptor } from 'src/app/core/interceptor/error.interceptor';\n\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n@NgModule({\n  declarations: [NavbarComponent],\n  imports: [CommonModule, CoreRoutingModule, ReactiveFormsModule, PublicModule, ProtectedModule],\n  exports: [NavbarComponent, RouterModule],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded.');\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { of } from 'rxjs';\nimport { Observable, Subject } from 'rxjs';\nimport { UserService, AlertService } from 'src/app/core/services';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserGuard implements CanActivate {\n  constructor(\n    private userService: UserService,\n    private alertService: AlertService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    if (localStorage.getItem('token')) {\n      return this.userService.isLoggedIn$;\n    } else {\n      this.alertService.sendMessage('you are not authorized');\n      this.router.navigateByUrl('/register');\n      return of(false);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { AlertService } from '../services/';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  constructor(private alertService: AlertService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      retry(1),\n      catchError((error: HttpErrorResponse) => {\n        let errors;\n        if (error.error.error) {\n          errors = error.error.error;\n        }\n        if (error.status === 404 || error.status === 0) {\n          // client-side error\n          this.alertService.sendMessage('No connection');\n        } else if (errors.email) {\n          this.alertService.sendMessage(errors.email);\n        } else if (errors.username) {\n          this.alertService.sendMessage(errors.username);\n        } else if (errors.password) {\n          this.alertService.sendMessage(errors.password);\n        } else {\n          // server-side error\n          this.alertService.sendMessage(error.error.message);\n        }\n\n        return throwError(error);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { AlertService, UserService } from '../services';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private alertService: AlertService, private router: Router) {}\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const idToken = localStorage.getItem('token');\n\n    if (idToken) {\n      const cloned = request.clone({\n        headers: request.headers.set('Authorization', 'Bearer ' + idToken),\n      });\n      return next.handle(cloned).pipe(\n        catchError((err) => {\n          if (err.status === 401) {\n            localStorage.removeItem('token');\n            this.alertService.sendMessage('You are not authorized');\n            this.router.navigateByUrl('/login');\n          }\n          if (err.status === 0) {\n            localStorage.removeItem('token');\n            this.alertService.sendMessage('No connection');\n            this.router.navigateByUrl('/login');\n          }\n          const error = err.error.message || err.statusText;\n          return throwError(error);\n        })\n      );\n    } else {\n      return next.handle(request);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlertService {\n  private subject = new BehaviorSubject<any>(undefined);\n\n  sendMessage(message: string) {\n    this.subject.next({ text: message });\n  }\n\n  clearMessages() {\n    this.subject.next('');\n  }\n\n  onMessage(): Observable<any> {\n    return this.subject.asObservable();\n  }\n}\n","import { UserService } from './user.service';\nimport { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { User } from 'src/app/shared/models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserResolverService implements Resolve<any> {\n  user: User;\n  constructor(private userService: UserService) {}\n\n  resolve(): User {\n    this.userService.user$.subscribe((user: User) => (this.user = user));\n    if (this.user) {\n      return this.user;\n    } else {\n      return;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AlertService } from '../alert/alert.service';\nimport { HttpConnectorsService } from '../http/http-connectors.service';\nimport { User } from 'src/app/shared/models';\nimport { BehaviorSubject } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { map, filter } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\ninterface LoginResponse {\n  user: User;\n  token: string;\n}\nexport interface LoginModel {\n  username: string;\n\n  password: string;\n}\nexport interface RegisterModel {\n  username: string;\n  email: string;\n  password: string;\n}\nexport interface UserResponse {\n  message: string;\n  user: User;\n  token: string;\n}\n\nconst headers = {\n  Authorization: 'Bearer ' + localStorage.getItem('token'),\n};\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private subject = new BehaviorSubject<User>(undefined);\n  public anonymousUser$ = new BehaviorSubject<boolean>(true);\n  public user$ = this.subject.asObservable().pipe(filter((user) => !!user));\n\n  isLoggedIn$: Observable<boolean> = this.user$.pipe(map((user: User) => !!user.id));\n\n  constructor(\n    private httpConnectorsService: HttpConnectorsService,\n    private alertService: AlertService,\n    private http: HttpClient,\n    private router: Router\n  ) {\n    if (this.getToken()) {\n      httpConnectorsService\n        .getRequest(environment.api + '/api/users/me')\n        .subscribe((user: User) => {\n          this.subject.next(user);\n        });\n    }\n  }\n  public get userValue(): User {\n    return this.subject.value;\n  }\n  getToken(): string {\n    return localStorage.getItem('token');\n  }\n\n  signUp(user: RegisterModel): Observable<UserResponse> {\n    return this.httpConnectorsService.postRequest(environment.api + '/api/users/signup', user).pipe(\n      map((response: UserResponse) => {\n        if (response) {\n          localStorage.setItem('token', response.token);\n          this.subject.next(response.user);\n          return response;\n        }\n      })\n    );\n  }\n\n  login(user): Observable<LoginResponse> {\n    return this.httpConnectorsService.postRequest(environment.api + `/api/users/signin`, user).pipe(\n      map((response) => {\n        if (response.token) {\n          localStorage.setItem('token', response.token);\n          this.subject.next(response.user);\n          return response;\n        }\n      })\n    );\n  }\n  update(user: User): Observable<User> {\n    return this.httpConnectorsService.putRequest(environment.api + `/api/users/update`, user);\n  }\n  logout(): void {\n    localStorage.removeItem('token');\n    this.subject.next(null);\n    this.alertService.sendMessage('you are disconnected');\n    this.router.navigateByUrl('login');\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpConnectorsService {\n  constructor(private http: HttpClient) {}\n\n  public getRequest(url): Observable<any> {\n    return this.http.get(url);\n  }\n\n  public postRequest(url, params): Observable<any> {\n    return this.http.post(url, params);\n  }\n  public putRequest(url, params): Observable<any> {\n    return this.http.put(url, params);\n  }\n}\n","export * from './alert/alert.service';\nexport * from './auth/user.service';\nexport * from './http/http-connectors.service';\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService, AlertService } from 'src/app/core/services';\nimport { User } from 'src/app/shared/models';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nconst VALIDATION = {\n  require: Validators.required,\n  min: Validators.minLength(3),\n  max: Validators.maxLength(20),\n  paternUsername: Validators.pattern(/^[A-Za-z0-9]+$/i),\n  paternPassword: Validators.pattern(/^(?=.*[a-z])[A-Za-z\\d@$!%*?&]{3,20}$/),\n};\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent {\n  loading = false;\n  user: User | null;\n  updateForm = new FormGroup({\n    password: new FormControl('', [\n      VALIDATION.require,\n      VALIDATION.min,\n      VALIDATION.max,\n      VALIDATION.paternPassword,\n    ]),\n  });\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private alertService: AlertService\n  ) {\n    this.user = this.userService.userValue;\n  }\n\n  onSubmit(): void {\n    if (this.updateForm.invalid) {\n      return;\n    }\n    this.userService.update(this.updateForm.value).subscribe({\n      next: (response) => {\n        this.alertService.sendMessage('you are register');\n      },\n      error: (err) => {\n        if (err.status === 404 || err.status === 0) {\n          this.alertService.sendMessage(err.statusText);\n        } else {\n          if (err.error.error.email) {\n            this.alertService.sendMessage(err.error.error.email);\n          }\n          if (err.error.error.password) {\n            this.alertService.sendMessage(err.error.error.password);\n          }\n        }\n      },\n    });\n  }\n}\n","<div class=\"card mt-4\">\n  <h4 class=\"card-header\">Home</h4>\n  <div class=\"card-body\" *ngIf=\"user\">\n    <p>You're logged in with Angular 9 & JWT!!</p>\n    <p>\n      Your username is: <strong>{{ user.username }}</strong>\n    </p>\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"updateForm\">\n      <app-input\n        label=\"password\"\n        placeholder=\"Please Enter your password\"\n        inputType=\"password\"\n        [control]=\"updateForm.get('password')\"\n      ></app-input>\n      <button type=\"submit\" class=\"btn btn-primary\">Continuer</button>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserService, AlertService } from 'src/app/core/services';\n\ninterface UserModel {\n  id: number;\n  username: object;\n  email: string;\n  password: string;\n  permission_id: number;\n}\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.scss'],\n})\nexport class EditProfileComponent implements OnInit {\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UserService,\n    private alertService: AlertService,\n    private formBuilder: FormBuilder\n  ) {}\n  updateForm: FormGroup;\n  user;\n  ngOnInit(): void {\n    this.user = this.route.snapshot.data.user;\n\n    this.updateForm = this.formBuilder.group({\n      username: new FormControl(this.user.username, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(20),\n        Validators.pattern(/^[a-z0-9]+$/),\n      ]),\n      email: new FormControl(this.user.email, Validators.required),\n      password: new FormControl('', Validators.required),\n    });\n  }\n\n  onSubmit(): void {\n    if (this.updateForm.invalid) {\n      return;\n    }\n    this.userService.update(this.updateForm.value).subscribe({\n      next: (response) => {\n        this.alertService.sendMessage('you are register');\n      },\n      error: (err) => {\n\n        if (err.status === 404 || err.status === 0) {\n          this.alertService.sendMessage(err.statusText);\n        } else {\n          if (err.error.error.email) {\n            this.alertService.sendMessage(err.error.error.email);\n          }\n          if (err.error.error.password) {\n            this.alertService.sendMessage(err.error.error.password);\n          }\n        }\n      },\n    });\n  }\n}\n","<div class=\"mt-5\">\n  <div class=\"card col-md-4 col-sm-12 m-auto\">\n    <div class=\"card-body\">\n\n      <div class=\"text-center mb-4\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"var(--blue)\" width=\"60px\" height=\"60px\">\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n          <path\n            d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\" />\n        </svg>\n        <h1>{{user.username}}</h1>\n      </div>\n      <app-alert></app-alert>\n      <div>\n        <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"updateForm\">\n          <app-input label=\"username\" inputType=\"text\" [control]=\"updateForm.get('username')\"></app-input>\n          <app-input label=\"email\" inputType=\"email\" [control]=\"updateForm.get('email')\">\n          </app-input>\n          <app-input label=\"password\" inputType=\"password\" [control]=\"updateForm.get('password')\"></app-input>\n          <button type=\"submit\" class=\"btn btn-primary\">Continuer</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","export * from './edit-profile.component';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EditProfileComponent } from './edit-profile/';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [EditProfileComponent],\n  imports: [CommonModule, ReactiveFormsModule, SharedModule],\n})\nexport class ProfilModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserGuard } from '../core/guards/user.guard';\nimport { HomeComponent } from './home/home.component';\nimport { UserResolverService } from '../core/services/auth/user-resolver.service';\nimport { EditProfileComponent } from './profil/edit-profile/edit-profile.component';\nconst routes: Routes = [\n  {\n    path: 'profile/edit',\n    component: EditProfileComponent,\n    canActivate: [UserGuard],\n    resolve: {\n      user: UserResolverService,\n    },\n  },\n  {\n    path: '',\n    component: HomeComponent,\n    canActivate: [UserGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProtectedRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\nimport { ProtectedRoutingModule } from './protected-routing.module';\nimport { ProfilModule } from './profil/profil.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from 'src/app/core/interceptor/token.interceptor';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [HomeComponent],\n  imports: [CommonModule, ProtectedRoutingModule, ProfilModule, ReactiveFormsModule, SharedModule],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true }],\n})\nexport class ProtectedModule {}\n","import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AlertService, UserService } from 'src/app/core/services';\nimport { Router } from '@angular/router';\nconst VALIDATION = {\n  require: Validators.required,\n  min: Validators.minLength(3),\n  max: Validators.maxLength(20),\n  paternUsername: Validators.pattern(/^[A-Za-z0-9]+$/i),\n  paternPassword: Validators.pattern(/^(?=.*[a-z])[A-Za-z\\d@$!%*?&]{3,20}$/),\n};\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  loginForm = new FormGroup({\n    username: new FormControl('', [\n      VALIDATION.require,\n      VALIDATION.min,\n      VALIDATION.max,\n      VALIDATION.paternUsername,\n    ]),\n    password: new FormControl('', [\n      VALIDATION.require,\n      VALIDATION.min,\n      VALIDATION.max,\n      VALIDATION.paternPassword,\n    ]),\n  });\n  loading = false;\n  constructor(\n    private userService: UserService,\n    private alertService: AlertService,\n    private router: Router\n  ) {}\n  onSubmit(): void {\n    this.loading = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.userService.login(this.loginForm.value).subscribe({\n      next: () => {\n        this.alertService.sendMessage('login');\n        this.loading = false;\n        this.router.navigateByUrl('');\n      },\n      error: () => {\n        this.loading = false;\n      },\n    });\n  }\n}\n","<div class=\"mt-5\">\n  <div class=\"card col-md-4 col-sm-12 m-auto\">\n    <div class=\"card-body\">\n      <div class=\"text-center mb-4\">\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"var(--blue)\" width=\"60px\" height=\"60px\">\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n          <path\n            d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\" />\n        </svg>\n        <h1>Login</h1>\n      </div>\n      <app-alert></app-alert>\n      <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"loginForm\">\n        <app-input label=\"username\" inputType=\"username\" [control]=\"loginForm.get('username')\"></app-input>\n        <app-input label=\"password\" inputType=\"password\" [control]=\"loginForm.get('password')\"></app-input>\n        <button [disabled]=\"loading\" [disabled]=\"!loginForm.valid\" type=\"submit\" class=\"btn btn-primary\">\n          <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>Continue</button>\n      </form>\n    </div>\n  </div>\n  <div class=\"col-md-4 col-sm-12 m-auto pt-2\"><a routerLink=\"/register\" routerLinkActive=\"active\">\n      New account ?\n    </a></div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class PublicRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { PublicRoutingModule } from './public-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SharedModule } from 'src/app/shared/shared.module';\n@NgModule({\n  declarations: [RegisterComponent, LoginComponent],\n  imports: [CommonModule, PublicRoutingModule, ReactiveFormsModule, SharedModule],\n})\nexport class PublicModule {}\n","import { Component } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { UserService, AlertService } from 'src/app/core/services';\n\nimport { Router } from '@angular/router';\n\nconst VALIDATION = {\n  require: Validators.required,\n  min: Validators.minLength(3),\n  max: Validators.maxLength(20),\n  paternUsername: Validators.pattern(/^[A-Za-z0-9]+$/i),\n  paternPassword: Validators.pattern(\n    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$/\n  ),\n  paternEmail: Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$'),\n};\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss'],\n})\nexport class RegisterComponent {\n  registerForm = new FormGroup({\n    username: new FormControl('', [\n      VALIDATION.require,\n      VALIDATION.min,\n      VALIDATION.max,\n      VALIDATION.paternUsername,\n    ]),\n  });\n  loading = false;\n  constructor(\n    private userService: UserService,\n    private alertService: AlertService,\n    private router: Router\n  ) {}\n\n  onSubmit(): void {\n    if (this.registerForm.invalid) {\n      return;\n    }\n    this.userService\n      .signUp({ ...this.registerForm.value, password: 'Password0%', email: 'test@test.com' })\n      .subscribe({\n        next: () => {\n          this.alertService.sendMessage('you are register');\n          this.router.navigateByUrl('');\n        },\n      });\n  }\n}\n","<div class=\"mt-5\">\n  <div class=\"card col-md-4 col-sm-12 m-auto\">\n    <div class=\"card-body\">\n      <div class=\"text-center mb-4\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 24 24\"\n          fill=\"var(--blue)\"\n          width=\"60px\"\n          height=\"60px\"\n        >\n          <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\n          <path\n            d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z\"\n          />\n        </svg>\n        <h1>Sign Up</h1>\n      </div>\n      <app-alert></app-alert>\n      <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"registerForm\">\n        <app-input\n          label=\"username\"\n          inputType=\"text\"\n          [control]=\"registerForm.get('username')\"\n        ></app-input>\n\n        <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!registerForm.valid\">\n          Continue\n        </button>\n      </form>\n    </div>\n  </div>\n  <div class=\"col-md-4 col-sm-12 m-auto pt-2\">\n    <a class=\"text-center\" routerLink=\"/login\" routerLinkActive=\"active\">\n      Already Sign ?\n    </a>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AlertService } from 'src/app/core/services/alert/alert.service';\n\nexport interface InterfaceMessage {\n  text: string;\n}\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss'],\n})\nexport class AlertComponent implements OnInit {\n  @Input() id = 'default-alert';\n  @Input() fade = true;\n  message: InterfaceMessage;\n  subscription: Subscription;\n\n  constructor(private alertService: AlertService) {}\n\n  ngOnInit(): void {\n    this.alertService\n      .onMessage()\n      .subscribe((messages: InterfaceMessage) => (this.message = messages));\n  }\n}\n","<div *ngIf=\"message\" class=\"text-danger\">\n  {{ message.text }}\n  test\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { AlertService } from 'src/app/core/services';\n@Component({\n  selector: 'app-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.scss'],\n})\nexport class InputComponent {\n  @Input() label: string;\n  @Input() inputType: string;\n  @Input() control: FormControl;\n  @Input() placeholder: string;\n\n  constructor(private alertService: AlertService) {}\n\n  showErrors(): object {\n    const { touched, errors } = this.control;\n\n    return touched && errors;\n  }\n  cssClass(error): string {\n    const defaultClasses = 'form-control';\n    if (error) {\n      const classes = ['form-control', 'border border-danger'];\n      return classes.join(' ');\n    }\n\n    return defaultClasses;\n  }\n}\n","<div class=\"form-group required errored\">\n  <label class=\"font-weight-bold text-capitalize\">{{ label }} *</label>\n  <input\n    [type]=\"inputType\"\n    [formControl]=\"control\"\n    [placeholder]=\"placeholder ? placeholder : ''\"\n    class=\"{{ cssClass(control.touched && control.errors) }}\"\n  />\n\n  <div *ngIf=\"showErrors()\">\n    <p class=\"text-danger\" *ngIf=\"control.errors.required\">Value is required</p>\n    <p class=\"text-danger\" *ngIf=\"control.errors.minlength\">Value is to short</p>\n    <p class=\"text-danger\" *ngIf=\"control.errors.maxlength\">there are too much of character</p>\n    <p class=\"text-danger\" *ngIf=\"control.errors.pattern\">this format value is not accestable</p>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AlertModule } from 'ngx-bootstrap/alert';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    AlertModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    ModalModule.forRoot(),\n    PopoverModule.forRoot(),\n  ],\n  exports: [AlertModule, BsDatepickerModule, BsDropdownModule, ModalModule, PopoverModule],\n})\nexport class NgxBootstrapModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { InputComponent } from './input/input.component';\nimport { AlertComponent } from './alert/alert.component';\n\nimport { NgxBootstrapModule } from './modules/ngx-bootstrap.module';\n\n@NgModule({\n  declarations: [InputComponent, AlertComponent],\n  imports: [CommonModule, ReactiveFormsModule, NgxBootstrapModule],\n\n  exports: [InputComponent, AlertComponent],\n})\nexport class SharedModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  api: 'http://localhost:5000',\n  secure: false,\n  production: false,\n};\n\n/*  \"proxy\": \"http://localhost:5000/\",\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}